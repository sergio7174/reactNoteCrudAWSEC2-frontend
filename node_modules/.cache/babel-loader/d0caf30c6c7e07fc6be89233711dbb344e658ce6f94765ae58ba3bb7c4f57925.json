{"ast":null,"code":"import{persistStore,persistReducer}from'redux-persist';import storage from'redux-persist/lib/storage';import{configureStore}from'@reduxjs/toolkit';import rootReducer from'./rootReducer';const persistConfig={key:'root',storage};const persistedReducer=persistReducer(persistConfig,rootReducer);export const store=configureStore({reducer:persistedReducer});export const persistor=persistStore(store);// Infer the `RootState` and `AppDispatch` types from the store itself\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}","map":{"version":3,"names":["persistStore","persistReducer","storage","configureStore","rootReducer","persistConfig","key","persistedReducer","store","reducer","persistor"],"sources":["E:/REACT-DOCKER-SEP2024/MERN TO AWS/EC2/REACT NOTE CRUD/reactNoteCrudAWSEC2-frontend/src/redux/store.ts"],"sourcesContent":["import { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './rootReducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n});\n\nexport const persistor = persistStore(store);\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n"],"mappings":"AAAA,OAASA,YAAY,CAAEC,cAAc,KAAQ,eAAe,CAC5D,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAC/C,OAASC,cAAc,KAAQ,kBAAkB,CACjD,MAAO,CAAAC,WAAW,KAAM,eAAe,CAEvC,KAAM,CAAAC,aAAa,CAAG,CACpBC,GAAG,CAAE,MAAM,CACXJ,OACF,CAAC,CAED,KAAM,CAAAK,gBAAgB,CAAGN,cAAc,CAACI,aAAa,CAAED,WAAW,CAAC,CAEnE,MAAO,MAAM,CAAAI,KAAK,CAAGL,cAAc,CAAC,CAClCM,OAAO,CAAEF,gBACX,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAG,SAAS,CAAGV,YAAY,CAACQ,KAAK,CAAC,CAE5C;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}