{"ast":null,"code":"export const ServiceHomeCreatePost = async (posts, text, setPosts, setModalEditPostActive) => {\n  // const response = await fetch(`http://localhost:3500/posts/${posts[0].  _id}`, {\n  const response = await fetch(`${process.env.REACT_APP_API_SERVER_URL}/posts/${posts[0]._id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    },\n    body: JSON.stringify({\n      text\n    })\n  });\n  const data = await response.json();\n  console.log(data);\n  if (response.ok) {\n    setPosts(prevPosts => {\n      return prevPosts.map(post => {\n        if (post._id === posts[0]._id) {\n          return {\n            ...post,\n            text: text || ''\n          };\n        } else {\n          return post;\n        }\n      });\n    });\n    setModalEditPostActive(false);\n  }\n  return response;\n};\n_c = ServiceHomeCreatePost;\nvar _c;\n$RefreshReg$(_c, \"ServiceHomeCreatePost\");","map":{"version":3,"names":["ServiceHomeCreatePost","posts","text","setPosts","setModalEditPostActive","response","fetch","process","env","REACT_APP_API_SERVER_URL","_id","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","data","json","console","log","ok","prevPosts","map","post","_c","$RefreshReg$"],"sources":["E:/REACT-DOCKER-SEP2024/MERN TO AWS/EC2/REACT NOTE CRUD/reactNoteCrudAWSEC2-frontend/src/services/Home/serviceHomeCreatePost.ts"],"sourcesContent":["export const ServiceHomeCreatePost = async (\n  posts: any,\n  text: string,\n  setPosts: any,\n  setModalEditPostActive: any,\n) => {\n  // const response = await fetch(`http://localhost:3500/posts/${posts[0].  _id}`, {\n  const response = await fetch(`${process.env.REACT_APP_API_SERVER_URL}/posts/${posts[0]._id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${localStorage.getItem('token')}`,\n    },\n    body: JSON.stringify({ text }),\n  });\n  const data = await response.json();\n  console.log(data);\n  if (response.ok) {\n    setPosts((prevPosts: any) => {\n      return prevPosts.map((post: any) => {\n        if (post._id === posts[0]._id) {\n          return {\n            ...post,\n            text: text || '',\n          };\n        } else {\n          return post;\n        }\n      });\n    });\n\n    setModalEditPostActive(false);\n  }\n  return response;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAG,MAAAA,CACnCC,KAAU,EACVC,IAAY,EACZC,QAAa,EACbC,sBAA2B,KACxB;EACH;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,wBAAyB,UAASR,KAAK,CAAC,CAAC,CAAC,CAACS,GAAI,EAAC,EAAE;IAC5FC,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;IACzD,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEhB;IAAK,CAAC;EAC/B,CAAC,CAAC;EACF,MAAMiB,IAAI,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;EAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB,IAAId,QAAQ,CAACkB,EAAE,EAAE;IACfpB,QAAQ,CAAEqB,SAAc,IAAK;MAC3B,OAAOA,SAAS,CAACC,GAAG,CAAEC,IAAS,IAAK;QAClC,IAAIA,IAAI,CAAChB,GAAG,KAAKT,KAAK,CAAC,CAAC,CAAC,CAACS,GAAG,EAAE;UAC7B,OAAO;YACL,GAAGgB,IAAI;YACPxB,IAAI,EAAEA,IAAI,IAAI;UAChB,CAAC;QACH,CAAC,MAAM;UACL,OAAOwB,IAAI;QACb;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFtB,sBAAsB,CAAC,KAAK,CAAC;EAC/B;EACA,OAAOC,QAAQ;AACjB,CAAC;AAACsB,EAAA,GAlCW3B,qBAAqB;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}