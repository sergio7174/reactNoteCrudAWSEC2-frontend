{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nrequire('dotenv').config();\nexport const loginUser = createAsyncThunk('auth/login', async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  alert('process.env.REACT_API_SERVER_URL}/users/login: ' + `${process.env.REACT_API_SERVER_URL}` + '/users/login');\n  try {\n    const response = await axios.post(`${process.env.REACT_API_SERVER_URL}/users/login`,\n    //`/users/login`,\n    {\n      email,\n      password\n    });\n    alert('Login successful');\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    alert('process.env.REACT_API_SERVER_URL}/users/login: ' + `${process.env.REACT_API_SERVER_URL}/users/login`);\n    alert('Hubo un error: ');\n    if (axios.isAxiosError(error)) {\n      var _error$response;\n      return rejectWithValue((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n    }\n    throw error;\n  }\n});\nexport const registerUser = createAsyncThunk('auth/login', async ({\n  name,\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(`${process.env.REACT_API_SERVER_URL}/users/register`,\n    //`/users/register`,\n    {\n      name,\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    if (axios.isAxiosError(error)) {\n      var _error$response2;\n      return rejectWithValue((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n    }\n    throw error;\n  }\n});\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem('token');\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    });\n    builder.addCase(loginUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n      localStorage.setItem('token', action.payload.token);\n    });\n    builder.addCase(loginUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = false;\n    });\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport const selectUser = state => state.auth.user;\nexport const selectUserId = state => {\n  var _state$auth$user;\n  return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user._id;\n};\nexport const selectIsAuthenticated = state => state.auth.isAuthenticated;\nexport const selectIsLoading = state => state.auth.isLoading;\nexport const selectError = state => state.auth.error;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","require","config","loginUser","email","password","rejectWithValue","alert","process","env","REACT_API_SERVER_URL","response","post","data","error","console","log","isAxiosError","_error$response","registerUser","name","_error$response2","initialState","user","isAuthenticated","isLoading","authSlice","reducers","logout","state","localStorage","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","setItem","token","rejected","actions","selectUser","auth","selectUserId","_state$auth$user","_id","selectIsAuthenticated","selectIsLoading","selectError","reducer"],"sources":["E:/REACT-DOCKER-SEP2024/MERN TO AWS/EC2/REACT NOTE CRUD/reactNoteCrudAWSEC2-frontend/src/redux/auth/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { RootState } from './../store';\nimport axios from 'axios';\nrequire('dotenv').config();\n\ninterface LoginResponse {\n  _id: string;\n  name: string;\n  email: string;\n  token: string;\n}\n\ninterface LoginState {\n  user: LoginResponse | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: null;\n}\n\ninterface LoginData {\n  name?: string;\n  email: string;\n  password: string;\n}\n\nexport const loginUser = createAsyncThunk<LoginResponse, LoginData>(\n  'auth/login',\n  async ({ email, password }, { rejectWithValue }) => {\n    alert(\n      'process.env.REACT_API_SERVER_URL}/users/login: ' +\n        `${process.env.REACT_API_SERVER_URL}` +\n        '/users/login',\n    );\n    try {\n      const response = await axios.post<LoginResponse>(\n        `${process.env.REACT_API_SERVER_URL}/users/login`,\n        //`/users/login`,\n        {\n          email,\n          password,\n        },\n      );\n      alert('Login successful');\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      alert(\n        'process.env.REACT_API_SERVER_URL}/users/login: ' +\n          `${process.env.REACT_API_SERVER_URL}/users/login`,\n      );\n      alert('Hubo un error: ');\n\n      if (axios.isAxiosError(error)) {\n        return rejectWithValue(error.response?.data);\n      }\n      throw error;\n    }\n  },\n);\n\nexport const registerUser = createAsyncThunk<LoginResponse, LoginData>(\n  'auth/login',\n  async ({ name, email, password }, { rejectWithValue }) => {\n    try {\n      const response = await axios.post<LoginResponse>(\n        `${process.env.REACT_API_SERVER_URL}/users/register`,\n        //`/users/register`,\n        {\n          name,\n          email,\n          password,\n        },\n      );\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      if (axios.isAxiosError(error)) {\n        return rejectWithValue(error.response?.data);\n      }\n      throw error;\n    }\n  },\n);\n\nconst initialState: LoginState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: (state) => {\n      state.user = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem('token');\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loginUser.pending, (state) => {\n      state.isLoading = true;\n      state.error = null;\n    });\n    builder.addCase(loginUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n      localStorage.setItem('token', action.payload.token);\n    });\n    builder.addCase(loginUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = false;\n    });\n  },\n});\n\nexport const { logout } = authSlice.actions;\n\nexport const selectUser = (state: RootState) => state.auth.user;\nexport const selectUserId = (state: RootState) => state.auth.user?._id;\nexport const selectIsAuthenticated = (state: RootState) => state.auth.isAuthenticated;\n\nexport const selectIsLoading = (state: RootState) => state.auth.isLoading;\nexport const selectError = (state: RootState) => state.auth.error;\nexport default authSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}